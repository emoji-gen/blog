version: 2
jobs:
  build:
    working_directory: ~/workspace
    docker:
      - image: circleci/python:3.8.0-buster-node
    environment:
      GIT_TERMINAL_PROMPT: 0
      TZ: Asia/Tokyo
    steps:
      - run:
          name: System information
          command: |
            python2 --version
            python3 --version | head -1
            echo "Node v$(node -v | tr -d v)"
            echo "NPM v$(npm -v | tr -d v)"
            echo "Yarn v$(yarn --version | tr -d v)"
      - checkout
      - run:
          name: Checkout submodules
          command: |
            JOBS=$(($(nproc) * 3))
            git submodule update --init --recursive --jobs=$JOBS
      - restore_cache:
          keys:
            - v2-{{ arch }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "yarn.lock" }}-{{ checksum "theme/yarn.lock" }}
            - v2-{{ arch }}-{{ checksum "requirements-dev.txt" }}
            - v2-{{ arch }}
      - run:
          name: Install dependencies (Python)
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
            pip3 install -q -r requirements-dev.txt
      - run:
          name: Install dependencies (Node)
          command: |
            yarn
            (cd theme && yarn)

            # for the `save_cache` step
            git checkout yarn.lock
            git checkout theme/yarn.lock
      - run:
          name: Test
          command: |
            yarn test
      - run:
          name: Build
          command: |
            make
      - save_cache:
          key: v2-{{ arch }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "yarn.lock" }}-{{ checksum "theme/yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/workspace/theme/node_modules
            - ~/.cache/yarn/
            - ~/.cache/pip/
      - run:
          name: Notify deploy started
          command: |
            if [ "$CIRCLE_BRANCH" = 'master' ]; then
              pip3 install -q slackweb
              python3 scripts/notify.py started
            fi
      - run:
          name: Deployment
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              yarn global add firebase-tools
              firebase deploy --non-interactive
            fi
      - run:
          name: Notify deploy successful
          command: |
            if [ "$CIRCLE_BRANCH" = 'master' ]; then
              pip3 install -q slackweb
              python3 scripts/notify.py successful
            fi
      - run:
          name: Notify deploy failed
          command: |
            if [ "$CIRCLE_BRANCH" = 'master' ]; then
              pip3 install -q slackweb
              python3 scripts/notify.py failed
            fi
          when: on_fail
